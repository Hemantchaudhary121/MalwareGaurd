const express = require('express');
const axios = require('axios');
const path = require('path');
const multer = require('multer');
const FormData = require('form-data');
const fs = require('fs');
const httpProxy = require('http-proxy'); // Import the http-proxy package

const app = express();

const storage = multer.memoryStorage();
const upload = multer({ storage: storage });

app.use(express.urlencoded({ extended: true }));
app.use(express.json());
app.use(express.static(path.join(__dirname, 'public')));

app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'ejs');

// Set up proxy for requests to Flask server
const proxy = httpProxy.createProxyServer();
app.use('/api', (req, res) => {
  proxy.web(req, res, { target: 'http://10.2.129.170:5000' }); // Change the target to your Flask server URL
});

app.get('/', (req, res) => {
  res.render('predict');
});

app.post('/predict', upload.single('pdfFile'), async (req, res) => {
  try {
    const pdfFile = req.file;

    // Save the PDF file to the uploads folder
    const uploadsPath = path.join(__dirname, 'uploads');
    if (!fs.existsSync(uploadsPath)) {
      fs.mkdirSync(uploadsPath);
    }
    const pdfFilePath = path.join(uploadsPath, pdfFile.originalname);
    fs.writeFileSync(pdfFilePath, pdfFile.buffer);

    // Send a POST request to the Flask server using the proxy
    const flaskServerUrl = '/api/predict'; // Use the proxy endpoint
    const formData = new FormData();
    formData.append('pdfFile', fs.createReadStream(pdfFilePath), {
      filename: pdfFile.originalname,
      contentType: 'application/pdf',
    });

    const headers = {
      ...formData.getHeaders(),
    };

    const flaskResponse = await axios.post(flaskServerUrl, formData, {
      headers: headers,
      responseType: 'json', // Set response type to JSON
    });
    console.log(flaskResponse.data);
    const prediction = flaskResponse.data.prediction;
    res.render('predict', { prediction });
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: 'An error occurred' });
  }
});

module.exports = app;
